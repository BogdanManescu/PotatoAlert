name: Build

on: [push]

jobs:
  build-windows:
    runs-on: windows-2019

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Visual Studio Shell
      uses: egor-tensin/vs-shell@v2
      with:
        arch: x64

    - name: Setup Ninja
      uses: ashutoshvarma/setup-ninja@master
      with:
        version: 1.10.2

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-QtCache

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: 5.15.2
        cached: ${{ steps.cache-qt.outputs.cache-hit }}

    - name: CMake Version
      run: cmake --version

    - name: Clang Version
      run: clang-cl --version

    - name: Run CMake
      env:
        CC: clang-cl
        CXX: clang-cl
      run: cmake -S . -B build -G Ninja -DCMAKE_RC_COMPILER=RC -DCMAKE_BUILD_TYPE=Release

    - name: Run Build
      run: cmake --build build --config Release --target PotatoAlert PotatoUpdater PotatoTest

    - name: List build dir
      run: dir ${{env.GITHUB_WORKSPACE}}/build

    - name: List test dir
      run: dir ${{env.GITHUB_WORKSPACE}}/build/bin-test

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: PotatoTest
        path: ${{env.GITHUB_WORKSPACE}}/build/bin-test/

    - name: Run CTest
      working-directory: ${{env.GITHUB_WORKSPACE}}/build
      env:
        CTEST_OUTPUT_ON_FAILURE: 1
      run: ctest -VV

    - name: Create Release Archive
      run: |
        7z a -mx9 -r PotatoAlert.zip .\build\bin\*

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: PotatoAlert
        path: PotatoAlert.zip

    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: true
        prerelease: false
        release_name: ${{ steps.version.outputs.version }}
        tag_name: ${{ github.ref }}
      env:
        GITHUB_TOKEN: ${{ github.token }}
      if: ${{ github.event_name == 'create' && github.event.ref_type == 'tag' }}

    - name: Upload Artifact To Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: PotatoAlert.zip
        asset_name: PotatoAlert.zip
        asset_content_type: application/zip
      if: ${{ github.event_name == 'create' && github.event.ref_type == 'tag' }}

  build-linux:
    if: ${{ false }}  # disable for now
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Ninja
      uses: ashutoshvarma/setup-ninja@master
      with:
        version: 1.10.2

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-QtCache

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: 5.15.2
        cached: ${{ steps.cache-qt.outputs.cache-hit }}

    - name: Cache LLVM and Clang
      id: cache-llvm
      uses: actions/cache@v2
      with:
        path: |
          ./llvm
        key: llvm-14
  
    - name: Install LLVM and Clang
      uses: KyleMayes/install-llvm-action@v1
      with:
        version: "14"
        cached: ${{ steps.cache-llvm.outputs.cache-hit }}

    #- name: Remove other LLVM installs
    #  run: sudo apt remove -y clang lld libc++-dev libc++abi-dev

    #- name: Install LLVM
    #  uses: myci-actions/add-deb-repo@10
    #  with:
    #    repo: deb http://apt.llvm.org/focal/ llvm-toolchain-focal-14 main
    #    repo-name: llvm-toolchain-focal-14
    #    keys-asc: https://apt.llvm.org/llvm-snapshot.gpg.key
    #    install: clang-14 lld-14 libc++-14-dev libc++abi-14-dev

    - name: CMake Version
      run: cmake --version

    - name: Clang Version
      run: clang --version

    - name: Run CMake
      env:
        CC: clang
        CXX: clang++
      run: cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXE_LINKER_FLAGS="-fuse-ld=lld"  -DCMAKE_CXX_FLAGS="-stdlib=libc++ -lc++abi"

    - name: Run Build
      run: cmake --build build --config Release --target PotatoAlert PotatoTest

    - name: Run CTest
      working-directory: ${{env.GITHUB_WORKSPACE}}/build
      env:
        CTEST_OUTPUT_ON_FAILURE: 1
      run: ctest

    - name: Create Release Archive
      run: |
        7z a -mx9 -r PotatoAlert.zip .\build\bin\*

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: PotatoAlert
        path: PotatoAlert.zip

    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: true
        prerelease: false
        release_name: ${{ steps.version.outputs.version }}
        tag_name: ${{ github.ref }}
      env:
        GITHUB_TOKEN: ${{ github.token }}
      if: ${{ github.event_name == 'create' && github.event.ref_type == 'tag' }}

    - name: Upload Artifact To Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: PotatoAlert.zip
        asset_name: PotatoAlert.zip
        asset_content_type: application/zip
      if: ${{ github.event_name == 'create' && github.event.ref_type == 'tag' }}
